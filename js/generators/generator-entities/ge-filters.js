// js/generators/generator-entities/ge-filters.js

/**
 * ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
 * ‚ïë                   –ü–û–®–£–ö –¢–ê –§–Ü–õ–¨–¢–†–ê–¶–Ü–Ø –°–£–¢–ù–û–°–¢–ï–ô                          ‚ïë
 * ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * - –ü–æ—à—É–∫ –ø–æ –≤—Å—ñ—Ö –ø–æ–ª—è—Ö
 * - –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é –∑–∞ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏
 * - –ú–∞—Å–æ–≤–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –æ–±—Ä–∞–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 */

import { getCategoriesData, getCharacteristicsData, getOptionsData, deleteEntity } from './ge-data.js';
import { renderCategories, renderCharacteristics, renderOptions, updateSelectedCount } from './ge-render.js';
import { getActiveTab, getActiveSheetName } from './ge-dom.js';
import { showToast } from '../../common/ui-toast.js';

/**
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –§–Ü–õ–¨–¢–†–Ü–í
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 */

export function initFilters() {
    const searchInput = document.getElementById('search-input');
    const btnDeleteSelected = document.getElementById('btn-delete-selected');
    const selectAllCheckboxes = document.querySelectorAll('[id^="select-all-"]');

    // –ü–æ—à—É–∫ –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é (debounce)
    if (searchInput) {
        let searchTimeout;
        searchInput.addEventListener('input', (e) => {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                handleSearch(e.target.value);
            }, 300); // 300ms –∑–∞—Ç—Ä–∏–º–∫–∞
        });
    }

    // –ö–Ω–æ–ø–∫–∞ "–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±—Ä–∞–Ω—ñ"
    if (btnDeleteSelected) {
        btnDeleteSelected.addEventListener('click', handleDeleteSelected);
    }

    // –ß–µ–∫–±–æ–∫—Å–∏ "–í–∏–±—Ä–∞—Ç–∏ –≤—Å—ñ"
    selectAllCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', (e) => {
            handleSelectAll(e.target.checked);
        });
    });

    // –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –∑–º—ñ–Ω–∏ —á–µ–∫–±–æ–∫—Å—ñ–≤ –≤ —Ä—è–¥–∫–∞—Ö —Ç–∞–±–ª–∏—Ü—ñ
    document.addEventListener('change', (e) => {
        if (e.target.classList.contains('row-checkbox')) {
            updateSelectedCount();
            updateDeleteButtonState();
        }
    });

    console.log('‚úÖ –§—ñ–ª—å—Ç—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
}

/**
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * –ü–û–®–£–ö
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 */

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ—à—É–∫—É
 */
function handleSearch(query) {
    const activeTab = getActiveTab();
    const normalizedQuery = query.toLowerCase().trim();

    console.log(`üîç –ü–æ—à—É–∫: "${query}" –≤ —Ç–∞–±—ñ "${activeTab}"`);

    if (!normalizedQuery) {
        // –Ø–∫—â–æ –ø–æ—à—É–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π - –ø–æ–∫–∞–∑—É—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ
        renderAllData();
        return;
    }

    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –¥–∞–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∞–±—É
    switch (activeTab) {
        case 'categories':
            filterCategories(normalizedQuery);
            break;
        case 'characteristics':
            filterCharacteristics(normalizedQuery);
            break;
        case 'options':
            filterOptions(normalizedQuery);
            break;
    }
}

/**
 * –§—ñ–ª—å—Ç—Ä—É—î –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–∞ –ø–æ—à—É–∫–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º
 */
function filterCategories(query) {
    const allCategories = getCategoriesData();
    const filtered = allCategories.filter(cat => {
        return (
            cat.local_id?.toLowerCase().includes(query) ||
            cat.parent_local_id?.toLowerCase().includes(query) ||
            cat.name_uk?.toLowerCase().includes(query) ||
            cat.name_ru?.toLowerCase().includes(query) ||
            cat.category_type?.toLowerCase().includes(query)
        );
    });

    const tbody = document.getElementById('categories-tbody');
    renderCategories(tbody, filtered);
    
    console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${filtered.length} –∑ ${allCategories.length} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π`);
}

/**
 * –§—ñ–ª—å—Ç—Ä—É—î —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∑–∞ –ø–æ—à—É–∫–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º
 */
function filterCharacteristics(query) {
    const allCharacteristics = getCharacteristicsData();
    const filtered = allCharacteristics.filter(char => {
        return (
            char.local_id?.toLowerCase().includes(query) ||
            char.name_uk?.toLowerCase().includes(query) ||
            char.name_ru?.toLowerCase().includes(query) ||
            char.param_type?.toLowerCase().includes(query) ||
            char.unit?.toLowerCase().includes(query) ||
            char.filter_type?.toLowerCase().includes(query) ||
            char.notes?.toLowerCase().includes(query)
        );
    });

    const tbody = document.getElementById('characteristics-tbody');
    renderCharacteristics(tbody, filtered);
    
    console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${filtered.length} –∑ ${allCharacteristics.length} —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫`);
}

/**
 * –§—ñ–ª—å—Ç—Ä—É—î –æ–ø—Ü—ñ—ó –∑–∞ –ø–æ—à—É–∫–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º
 */
function filterOptions(query) {
    const allOptions = getOptionsData();
    const filtered = allOptions.filter(opt => {
        return (
            opt.local_id?.toLowerCase().includes(query) ||
            opt.char_local_id?.toLowerCase().includes(query) ||
            opt.name_uk?.toLowerCase().includes(query) ||
            opt.name_ru?.toLowerCase().includes(query)
        );
    });

    const tbody = document.getElementById('options-tbody');
    renderOptions(tbody, filtered);
    
    console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${filtered.length} –∑ ${allOptions.length} –æ–ø—Ü—ñ–π`);
}

/**
 * –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤—Å—ñ –¥–∞–Ω—ñ –±–µ–∑ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
 */
function renderAllData() {
    const categoriesTbody = document.getElementById('categories-tbody');
    const characteristicsTbody = document.getElementById('characteristics-tbody');
    const optionsTbody = document.getElementById('options-tbody');

    renderCategories(categoriesTbody);
    renderCharacteristics(characteristicsTbody);
    renderOptions(optionsTbody);
}

/**
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * –í–ò–ë–Ü–† –ï–õ–ï–ú–ï–ù–¢–Ü–í (–ß–ï–ö–ë–û–ö–°–ò)
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 */

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ "–í–∏–±—Ä–∞—Ç–∏ –≤—Å—ñ"
 */
function handleSelectAll(checked) {
    const activeTab = getActiveTab();
    let selector = '';

    switch (activeTab) {
        case 'categories':
            selector = '#categories-tbody .row-checkbox';
            break;
        case 'characteristics':
            selector = '#characteristics-tbody .row-checkbox';
            break;
        case 'options':
            selector = '#options-tbody .row-checkbox';
            break;
    }

    const checkboxes = document.querySelectorAll(selector);
    checkboxes.forEach(cb => {
        cb.checked = checked;
    });

    updateSelectedCount();
    updateDeleteButtonState();

    console.log(`${checked ? '‚úÖ –í–∏–±—Ä–∞–Ω–æ' : '‚ùå –ó–Ω—è—Ç–æ –≤–∏–±—ñ—Ä'} –∑ —É—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ (${checkboxes.length})`);
}

/**
 * –û–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏ "–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±—Ä–∞–Ω—ñ"
 */
function updateDeleteButtonState() {
    const btnDeleteSelected = document.getElementById('btn-delete-selected');
    if (!btnDeleteSelected) return;

    const selectedCount = document.querySelectorAll('.row-checkbox:checked').length;
    btnDeleteSelected.disabled = selectedCount === 0;
}

/**
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * –ú–ê–°–û–í–ï –í–ò–î–ê–õ–ï–ù–ù–Ø
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 */

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ "–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±—Ä–∞–Ω—ñ"
 */
async function handleDeleteSelected() {
    const selectedCheckboxes = document.querySelectorAll('.row-checkbox:checked');
    const selectedIds = Array.from(selectedCheckboxes).map(cb => cb.dataset.id);

    if (selectedIds.length === 0) {
        showToast('‚ö†Ô∏è –ù–µ –≤–∏–±—Ä–∞–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞', 'warning');
        return;
    }

    const confirmed = confirm(
        `–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ ${selectedIds.length} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤?\n\n` +
        `–¶—è –¥—ñ—è –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω—è!`
    );

    if (!confirmed) return;

    const sheetName = getActiveSheetName();
    let successCount = 0;
    let errorCount = 0;

    showToast(`‚è≥ –í–∏–¥–∞–ª–µ–Ω–Ω—è ${selectedIds.length} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤...`, 'info');

    // –í–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø–æ –æ–¥–Ω–æ–º—É
    for (const checkbox of selectedCheckboxes) {
        const row = checkbox.closest('tr');
        const rowIndex = row.dataset.rowIndex;

        try {
            await deleteEntity(sheetName, parseInt(rowIndex));
            successCount++;
            console.log(`‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ: ${checkbox.dataset.id}`);
        } catch (error) {
            errorCount++;
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ${checkbox.dataset.id}`, error);
        }
    }

    // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (errorCount === 0) {
        showToast(`‚úÖ –£—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ ${successCount} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤`, 'success');
    } else {
        showToast(`‚ö†Ô∏è –í–∏–¥–∞–ª–µ–Ω–æ ${successCount}, –ø–æ–º–∏–ª–æ–∫: ${errorCount}`, 'warning');
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    renderAllData();
    updateSelectedCount();
    updateDeleteButtonState();

    // –ó–Ω—ñ–º–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å "–í–∏–±—Ä–∞—Ç–∏ –≤—Å—ñ"
    const selectAllCheckbox = document.querySelector(`#select-all-${getActiveTab()}`);
    if (selectAllCheckbox) {
        selectAllCheckbox.checked = false;
    }
}

/**
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * –û–ß–ò–©–ï–ù–ù–Ø –§–Ü–õ–¨–¢–†–Ü–í
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 */

/**
 * –û—á–∏—â–∞—î –≤—Å—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ —Ç–∞ –ø–æ—à—É–∫
 */
export function clearFilters() {
    const searchInput = document.getElementById('search-input');
    if (searchInput) {
        searchInput.value = '';
    }

    renderAllData();
    updateSelectedCount();

    console.log('üßπ –§—ñ–ª—å—Ç—Ä–∏ –æ—á–∏—â–µ–Ω–æ');
}

/**
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * –°–û–†–¢–£–í–ê–ù–ù–Ø (–û–ü–¶–Ü–û–ù–ê–õ–¨–ù–û)
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 */

/**
 * –°–æ—Ä—Ç—É—î —Ç–∞–±–ª–∏—Ü—é –∑–∞ –≤–∫–∞–∑–∞–Ω–æ—é –∫–æ–ª–æ–Ω–∫–æ—é
 * TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ
 */
export function sortTable(column, direction = 'asc') {
    console.log(`üìä –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ "${column}" (${direction})`);
    // –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
}

/**
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 * –ï–ö–°–ü–û–†–¢/–Ü–ú–ü–û–†–¢ (–û–ü–¶–Ü–û–ù–ê–õ–¨–ù–û)
 * ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 */

/**
 * –ï–∫—Å–ø–æ—Ä—Ç—É—î –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –≤ CSV
 * TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ
 */
export function exportToCSV() {
    console.log('üì• –ï–∫—Å–ø–æ—Ä—Ç –≤ CSV');
    // –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –µ–∫—Å–ø–æ—Ä—Ç—É
}

/**
 * –ï–∫—Å–ø–æ—Ä—Ç—É—î –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –≤ JSON
 * TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ
 */
export function exportToJSON() {
    console.log('üì• –ï–∫—Å–ø–æ—Ä—Ç –≤ JSON');
    // –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –µ–∫—Å–ø–æ—Ä—Ç—É
}
