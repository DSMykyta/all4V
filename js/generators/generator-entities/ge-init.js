// js/generators/generator-entities/ge-init.js

import { initDOM, updateDynamicDOM } from './ge-dom.js';
import { fetchAllData } from './ge-data.js';
import { renderAllTables, showAuthRequiredState } from './ge-render.js';
import { initEvents } from './ge-events.js';
import { initFilters } from './ge-filters.js';

/**
 * –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
 */
async function init() {
    console.log('üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Generator Entities...');

    // –ö—Ä–æ–∫ 1: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ DOM –µ–ª–µ–º–µ–Ω—Ç–∏
    initDOM();

    // –ö—Ä–æ–∫ 2: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    initEvents();

    // –ö—Ä–æ–∫ 3: –ß–µ–∫–∞—î–º–æ –Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é Google API (–∑–∞—Ç—Ä–∏–º–∫–∞ 2 —Å–µ–∫—É–Ω–¥–∏)
    setTimeout(async () => {
        const token = localStorage.getItem('google_auth_token');
        
        if (token && typeof gapi !== 'undefined' && gapi.client) {
            console.log('‚úÖ –¢–æ–∫–µ–Ω –∑–Ω–∞–π–¥–µ–Ω–æ, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ...');
            await loadEntitiesData();
        } else {
            console.warn('‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –∞–±–æ gapi –Ω–µ –≥–æ—Ç–æ–≤–∏–π');
            showNotAuthorizedState();
        }
    }, 2000);

    // –ö—Ä–æ–∫ 4: –°–ª—É—Ö–∞—î–º–æ –ø–æ–¥—ñ—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    document.addEventListener('google-auth-success', async () => {
        console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ...');
        setTimeout(async () => {
            await loadEntitiesData();
        }, 500);
    });

    // –ö—Ä–æ–∫ 5: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏ (–ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è aside —à–∞–±–ª–æ–Ω—É)
    setTimeout(() => {
        updateDynamicDOM();
        initFilters();
    }, 1500);

    console.log('‚úÖ Generator Entities —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ —Å—É—Ç–Ω–æ—Å—Ç–µ–π –∑ Google Sheets
 */
async function loadEntitiesData() {
    console.log('üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—É—Ç–Ω–æ—Å—Ç–µ–π...');

    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ gapi –≥–æ—Ç–æ–≤–∏–π
        if (typeof gapi === 'undefined' || !gapi.client) {
            console.warn('‚ö†Ô∏è Google API —â–µ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, —á–µ–∫–∞—î–º–æ...');
            return;
        }

        await fetchAllData();
        renderAllTables();

        console.log('‚úÖ –î–∞–Ω—ñ —Å—É—Ç–Ω–æ—Å—Ç–µ–π –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ');

    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—É—Ç–Ω–æ—Å—Ç–µ–π:', error);
        showErrorState();
    }
}

/**
 * –ü–æ–∫–∞–∑—É—î —Å—Ç–∞–Ω "–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ"
 */
function showNotAuthorizedState() {
    const categoriesTbody = document.getElementById('categories-tbody');
    const characteristicsTbody = document.getElementById('characteristics-tbody');
    const optionsTbody = document.getElementById('options-tbody');

    showAuthRequiredState(categoriesTbody, 7);
    showAuthRequiredState(characteristicsTbody, 9);
    showAuthRequiredState(optionsTbody, 6);
}

/**
 * –ü–æ–∫–∞–∑—É—î —Å—Ç–∞–Ω –ø–æ–º–∏–ª–∫–∏
 */
function showErrorState() {
    const categoriesTbody = document.getElementById('categories-tbody');
    const characteristicsTbody = document.getElementById('characteristics-tbody');
    const optionsTbody = document.getElementById('options-tbody');

    const errorHTML = `
        <tr class="error-state">
            <td colspan="7" style="text-align: center; padding: 60px 20px;">
                <span class="material-symbols-outlined" style="font-size: 64px; display: block; margin-bottom: 16px; color: var(--error, red);">error</span>
                <h3 style="margin: 0 0 8px 0; font-size: 18px; color: var(--text-primary);">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h3>
                <p style="color: var(--text-secondary); margin: 0 0 20px 0;">–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞</p>
                <button onclick="document.getElementById('btn-reload').click()" class="btn-primary">
                    <span class="material-symbols-outlined">refresh</span>
                    –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
                </button>
            </td>
        </tr>
    `;

    if (categoriesTbody) categoriesTbody.innerHTML = errorHTML;
    if (characteristicsTbody) characteristicsTbody.innerHTML = errorHTML.replace('colspan="7"', 'colspan="9"');
    if (optionsTbody) optionsTbody.innerHTML = errorHTML.replace('colspan="7"', 'colspan="6"');
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
} else {
    init();
}
