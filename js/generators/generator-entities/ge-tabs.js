// js/generators/generator-entities/ge-tabs.js

import { renderCategories, renderCharacteristics, renderOptions } from './ge-render.js';
import { getEntitiesDOM } from './ge-dom.js';

let currentTab = 'categories';

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Ç–∞–±—ñ–≤
 */
export function initTabs() {
    const dom = getEntitiesDOM();

    dom.tabButtons.forEach(button => {
        button.addEventListener('click', () => {
            const tabName = button.dataset.tab;
            switchTab(tabName);
        });
    });
}

/**
 * –ü–µ—Ä–µ–º–∏–∫–∞—î —Ç–∞–±
 */
export function switchTab(tabName) {
    currentTab = tabName;
    
    const dom = getEntitiesDOM();

    // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫
    dom.tabButtons.forEach(btn => {
        btn.classList.toggle('active', btn.dataset.tab === tabName);
    });

    // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –∫–æ–Ω—Ç–µ–Ω—Ç—É
    dom.tabContents.forEach(content => {
        content.classList.toggle('active', content.dataset.tabContent === tabName);
    });

    // –û—á–∏—â–∞—î–º–æ –≤–∏–±—Ä–∞–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
    clearAllSelections();

    console.log(`üìë –ü–µ—Ä–µ–º–∫–Ω—É—Ç–æ –Ω–∞ —Ç–∞–±: ${tabName}`);
}

/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞–±
 */
export function getCurrentTab() {
    return currentTab;
}

/**
 * –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—é—î –ø–æ—Ç–æ—á–Ω–∏–π —Ç–∞–±
 */
export function refreshCurrentTab() {
    const dom = getEntitiesDOM();

    switch (currentTab) {
        case 'categories':
            renderCategories(dom.categoriesTbody);
            break;
        case 'characteristics':
            renderCharacteristics(dom.characteristicsTbody);
            break;
        case 'options':
            renderOptions(dom.optionsTbody);
            break;
    }
}

/**
 * –û—á–∏—â–∞—î –≤—Å—ñ —á–µ–∫–±–æ–∫—Å–∏
 */
function clearAllSelections() {
    const checkboxes = document.querySelectorAll('.row-checkbox:checked');
    checkboxes.forEach(cb => cb.checked = false);

    const selectAllCheckboxes = document.querySelectorAll('[id^="select-all-"]');
    selectAllCheckboxes.forEach(cb => cb.checked = false);

    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    const dom = getEntitiesDOM();
    if (dom.btnDeleteSelected) {
        dom.btnDeleteSelected.disabled = true;
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
    if (dom.selectedCount) {
        dom.selectedCount.textContent = '0 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤';
    }
}
